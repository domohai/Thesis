@inproceedings{MDE,
  author = {France, Robert and Rumpe, Bernhard},
  booktitle = {Future of Software Engineering (FOSE '07)}, 
  title = {Model-driven Development of Complex Software: A Research Roadmap}, 
  year = {2007},
  volume = {},
  number = {},
  pages = {37-54},
  keywords = {Software systems;Model driven engineering;Programming;Computer science;Unified modeling language;Software testing;Systems engineering and theory;Computer industry;Streaming media;Reliability engineering},
  doi = {10.1109/FOSE.2007.14}
}

@article{USE,
  author = {Gogolla, Martin and B\"{u}ttner, Fabian and Richters, Mark},
  title = {USE: A UML-based specification environment for validating UML and OCL},
  year = {2007},
  issue_date = {December, 2007},
  publisher = {Elsevier North-Holland, Inc.},
  address = {USA},
  volume = {69},
  number = {1–3},
  issn = {0167-6423},
  url = {https://doi.org/10.1016/j.scico.2007.01.013},
  doi = {10.1016/j.scico.2007.01.013},
  abstract = {The Unified Modeling Language (UML) is accepted today as an important standard for developing software. UML tools however provide little support for validating and checking models in early development phases. There is also no substantial support for the Object Constraint Language (OCL). We present an approach for the validation of UML models and OCL constraints based on animation and certification. The USE tool (UML-based Specification Environment) supports analysts, designers and developers in executing UML models and checking OCL constraints and thus enables them to employ model-driven techniques for software production.},
  journal = {Sci. Comput. Program.},
  month = dec,
  pages = {27–34},
  numpages = {8},
  keywords = {Constraint, Invariant, Model, Model certification, Model execution, Model validation, OCL, Pre- and post-conditions, UML}
}

@inproceedings{TOCL,
  author = {Lail, Mustafa Al and Rosales, Antonio and Cardenas, Hector and Hamann, Lars and Perez, Alfredo},
  title = {Transformation of TOCL temporal properties into OCL},
  year = {2022},
  isbn = {9781450394673},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3550356.3563132},
  doi = {10.1145/3550356.3563132},
  abstract = {Specifying and verifying the temporal properties of UML-based systems can be challenging. Although there exist some extensions of OCL to support the specification of temporal properties, most of the approaches depend on using non-UML formalisms such as LTL, CTL, and CTL*. The approaches also rely on transforming the under-development UML models into non-UML model checking frameworks for verification. These approaches introduce complexities and relies on techniques and tools that are not within the UML spectrum. In this paper, we show how TOCL (one OCL extension for temporal properties specification) can be transformed into OCL for verification purposes. Towards this end, we created a formal EBNF grammar for TOCL, based on which a parser and a MOF metamodel were generated. To facilitate the analysis of the TOCL properties, we formally defined transformation rules from the TOCL metamodel to the OCL metamodel using QVTo. We validated the implementations of the transformation rules using USE.},
  booktitle = {Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings},
  pages = {899–907},
  numpages = {9},
  keywords = {transformation, temporal propeties, UML, TOCL, OCL},
  location = {Montreal, Quebec, Canada},
  series = {MODELS '22}
}

@inproceedings{TOCL2OCL,
  author = {Lail, Mustafa Al and Rosales, Antonio and Cardenas, Hector and Hamann, Lars and Perez, Alfredo},
  title = {Transformation of TOCL temporal properties into OCL},
  year = {2022},
  isbn = {9781450394673},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3550356.3563132},
  doi = {10.1145/3550356.3563132},
  abstract = {Specifying and verifying the temporal properties of UML-based systems can be challenging. Although there exist some extensions of OCL to support the specification of temporal properties, most of the approaches depend on using non-UML formalisms such as LTL, CTL, and CTL*. The approaches also rely on transforming the under-development UML models into non-UML model checking frameworks for verification. These approaches introduce complexities and relies on techniques and tools that are not within the UML spectrum. In this paper, we show how TOCL (one OCL extension for temporal properties specification) can be transformed into OCL for verification purposes. Towards this end, we created a formal EBNF grammar for TOCL, based on which a parser and a MOF metamodel were generated. To facilitate the analysis of the TOCL properties, we formally defined transformation rules from the TOCL metamodel to the OCL metamodel using QVTo. We validated the implementations of the transformation rules using USE.},
  booktitle = {Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings},
  pages = {899–907},
  numpages = {9},
  keywords = {OCL, TOCL, UML, temporal properties, transformation},
  location = {Montreal, Quebec, Canada},
  series = {MODELS '22}
}

@manual{UML,
  title = {Unified modeling language specification version 2.5.1},
  year = {2017},
  publisher = {Object Management Group},
  url = {https://www.omg.org/spec/UML/2.5.1}
}

@manual{OCL,
  title = {Object Constraint Language Specification},
  year = {2017},
  publisher = {Object Management Group},
  url = {https://www.omg.org/spec/OCL/2.5.1}
}

@article{UML_Statement_1, 
  author = {Ku\v{s}ek, Mario and De\v{s}i\'{c}, Sa\v{s}a and Gvozdanovi\'{c}, Darko},
  year = {2001}, 
  pages = {55-60}, 
  keywords = {UML Based Object-Oriented Development}, 
  title = {UML Based Object-Oriented Development: Experience with Inexperienced Users}, 
  keyword = {UML Based Object-Oriented Development}, 
  publisherplace = {Zagreb, Croatia} 
}

@book{UML_Reference_Manual,
  author = {Rumbaugh, James and Jacobson, Ivar and Booch, Grady},
  title = {The Unified Modeling Language reference manual},
  year = {1998},
  isbn = {020130998X},
  publisher = {Addison-Wesley Longman Ltd.},
  address = {GBR},
  url = {https://dl.acm.org/doi/book/10.5555/294049},
  doi = {10.5555/294049},
}

@article{TOCL_Taha,
  title = {Specification of temporal properties with OCL},
  journal = {Science of Computer Programming},
  volume = {96},
  pages = {527-551},
  year = {2014},
  note = {Selected Papers from the Fifth International Conference on Software Language Engineering (SLE 2012)},
  issn = {0167-6423},
  doi = {https://doi.org/10.1016/j.scico.2014.02.029},
  url = {https://www.sciencedirect.com/science/article/pii/S0167642314000963},
  author = {Bilal Kanso and Safouan Taha},
  keywords = {OCL, Temporal patterns, Eclipse/MDT, Model-driven engineering, Formal methods},
  abstract = {The Object Constraint Language (OCL) is widely used to express static constraints on models and object-oriented systems. However, the notion of dynamic constraints, controlling the system behavior over time, has not been natively supported. Such dynamic constraints are necessary to handle temporal and real-time properties of systems. In this paper, we first add a temporal layer to the OCL language, based syntactically on Dwyer et al.'s specification patterns. We enrich it with formal scenario-based semantics and integrate it into the current Eclipse OCL plug-in. Second, we translate, with a compositional approach, OCL temporal properties into finite-state automata and we connect our framework to automatic test generators. This way, we create a bridge linking model driven engineering and usual formal methods.}
}

@InProceedings{Filmstripping,
  author = {Hilken, Frank and Hamann, Lars and Gogolla, Martin},
  editor = {Di Ruscio, Davide and Varr{\'o}, D{\'a}niel},
  title = {Transformation of UML and OCL Models into Filmstrip Models},
  booktitle = {Theory and Practice of Model Transformations},
  year = {2014},
  publisher = {Springer International Publishing},
  address = {Cham},
  pages = {170--185},
  abstract = {This contribution presents an automatic transformation from UML and OCL models into enriched UML and OCL models, so-called filmstrip models, which embody temporal information when employing OCL while maintaining the same functionality as the original model. The approach uses a combination of object and sequence diagrams that allows for a wide range of possible OCL constraints about sequences of operation calls and their temporal properties. The modeler does not need to account for such properties while creating the original model. Errors found by constraints for the filmstrip model can easily be related back to the original model, as the elements of the filmstrip model are synchronized with the original model and the backwards calculation is generally simple. The approach is implemented in a UML and OCL modeling tool.},
  isbn = {978-3-319-08789-4}
}

@inproceedings{USE_Validator,
  title = {Integrating an SMT-Based ModelFinder into USE.},
  author = {Przigoda, Nils and Hilken, Frank and Peters, Judith and Wille, Robert and Gogolla, Martin and Drechsler, Rolf},
  booktitle = {MoDeVVa@ MoDELS},
  pages = {40--45},
  year = {2016},
  organization = {Citeseer},
  doi = {10.1109/MoDeVVa.2016.10}
}

@inproceedings{TPV,
  author = {Al Lail, Mustafa and Viesca, Antonio and Cardenas, Hector and Zarour, Mohammad and Perez, Alfredo},
  title = {TPV: A Tool for Validating Temporal Properties in UML Class Diagrams},
  year = {2024},
  isbn = {9798400705021},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3639478.3640044},
  doi = {10.1145/3639478.3640044},
  abstract = {Software scientists and practitioners have criticized Model-driven engineering (MDE) for lacking effective tooling. Although progress has been made, most MDE analysis tools rely on complex, heavyweight mathematical techniques that are not based on UML. Such tools require a steep learning curve and suffer from many accidental complexities. We developed the Temporal Property Validator (TPV) to tackle this issue. TPV allows designers to specify and analyze temporal properties using UML notations, techniques, and tools. We evaluated TPV using the user experience evaluation method and obtained promising results in all aspects of user needs. You can download TPV and view the demo video from https://github.com/mustafalail/TPV-Tool.},
  booktitle = {Proceedings of the 2024 IEEE/ACM 46th International Conference on Software Engineering: Companion Proceedings},
  pages = {114–118},
  numpages = {5},
  keywords = {temporal propeties, OCL, UML, tool, model checking, verification},
  location = {Lisbon, Portugal},
  series = {ICSE-Companion '24}
}

@inproceedings{Kodkod,
  author = {Torlak, Emina and Jackson, Daniel},
  title = {Kodkod: a relational model finder},
  year = {2007},
  isbn = {9783540712084},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg},
  abstract = {The key design challenges in the construction of a SAT-based relational model finder are described, and novel techniques are proposed to address them. An efficient model finder must have a mechanism for specifying partial solutions, an effective symmetry detection and breaking scheme, and an economical translation from relational to boolean logic. These desiderata are addressed with three new techniques: a symmetry detection algorithm that works in the presence of partial solutions, a sparse-matrix representation of relations, and a compact representation of boolean formulas inspired by boolean expression diagrams and reduced boolean circuits. The presented techniques have been implemented and evaluated, with promising results.},
  booktitle = {Proceedings of the 13th International Conference on Tools and Algorithms for the Construction and Analysis of Systems},
  pages = {632–647},
  numpages = {16},
  location = {Braga, Portugal},
  series = {TACAS'07}
}

@inproceedings{Model_Validator_2,
  author = {Kuhlmann, Mirco and Hamann, Lars and Gogolla, Martin},
  title = {Extensive validation of OCL models by integrating SAT solving into USE},
  year = {2011},
  isbn = {9783642219511},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg},
  abstract = {The Object Constraint Language (OCL) substantially enriches modeling languages like UML, MOF or EMF with respect to formulating meaningful model properties. In model-centric approaches, an accurately defined model is a requisite for further use. During development of a model, continuous validation of properties and feedback to developers is required, since many design flaws can then be directly discovered and corrected. For this purpose, lightweight validation approaches which allow developers to perform automatic model analysis are particularly helpful. We provide a new method for efficiently searching for model instances. The existence or non-existence of model instances with certain properties allows significant conclusions about model properties. Our approach is based on the translation of UML and OCL concepts into relational logic and its realization with SAT solvers. We explain various use cases of our proposal, for example, completion of partly defined model instances so that particular properties hold in the completed model instances. Our proposal is realized by integrating a model validator as a plugin into the UML and OCL tool USE},
  booktitle = {Proceedings of the 49th International Conference on Objects, Models, Components, Patterns},
  pages = {290–306},
  numpages = {17},
  location = {Zurich, Switzerland},
  series = {TOOLS'11}
}

@inproceedings{Properties_file,
  title={Model validation and verification options in a contemporary UML and OCL analysis tool},
  author={Gogolla, Martin and Hilken, Frank},
  booktitle={Modellierung 2016},
  pages={205--220},
  year={2016},
  organization={Gesellschaft f{\"u}r Informatik eV},
  doi={10.1007/978-3-319-42063-6_15}
}

@inproceedings{AM2Filmstrip,
  title={From application models to filmstrip models: An approach to automatic validation of model dynamics},
  author={Gogolla, Martin and Hamann, Lars and Hilken, Frank and Kuhlmann, Mirco and France, Robert},
  booktitle={Modellierung 2014},
  pages={273--288},
  year={2014},
  organization={Gesellschaft f{\"u}r Informatik eV}
}

@article{MADES,
  title={Formal verification and validation of embedded systems: the UML-based MADES approach},
  author={Baresi, Luciano and Blohm, Gundula and Kolovos, Dimitrios S and Matragkas, Nicholas and Motta, Alfredo and Paige, Richard F and Radjenovic, Alek and Rossi, Matteo},
  journal={Software \& Systems Modeling},
  volume={14},
  pages={343--363},
  year={2015},
  publisher={Springer}
}

@inproceedings{Combemale_related_work_2,
  title={A property-driven approach to formal verification of process models},
  author={Combemale, Beno{\i}t and Cr{\'e}gut, Xavier and Garoche, Pierre-Lo{\"\i}c and Thirioux, Xavier and Vernadat, Francois},
  booktitle={Enterprise Information Systems: 9th International Conference, ICEIS 2007, Funchal, Madeira, June 12-16, 2007, Revised Selected Papers 9},
  pages={286--300},
  year={2008},
  organization={Springer}
}

@inproceedings{ProMoBox_related_work_3,
  title={ProMoBox: a framework for generating domain-specific property languages},
  author={Meyers, Bart and Deshayes, Romuald and Lucio, Levi and Syriani, Eugene and Vangheluwe, Hans and Wimmer, Manuel},
  booktitle={Software Language Engineering: 7th International Conference, SLE 2014, V{\"a}ster{\aa}s, Sweden, September 15-16, 2014. Proceedings 7},
  pages={1--20},
  year={2014},
  organization={Springer},
  doi={10.1007/978-3-319-42063-6_15}
}

@article{verification_TOCL_Taha,
  title={Temporal property patterns for model-based testing from UML/OCL},
  author={Dadeau, Fr{\'e}d{\'e}ric and Fourneret, Elizabeta and Bouchelaghem, Abir},
  journal={Software \& Systems Modeling},
  volume={18},
  pages={865--888},
  year={2019},
  publisher={Springer}
}

@inproceedings{verifying_filmstripping,
  title={Verifying linear temporal logic properties in UML/OCL class diagrams using filmstripping},
  author={Hilken, Frank and Gogolla, Martin},
  booktitle={2016 Euromicro Conference on Digital System Design (DSD)},
  pages={708--713},
  year={2016},
  organization={IEEE}
}

\end{thebibliography}
