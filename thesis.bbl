% $ biblatex auxiliary file $
% $ biblatex bbl format version 3.3 $
% Do not modify the above lines!
%
% This is an auxiliary file used by the 'biblatex' package.
% This file may safely be deleted. It will be recreated by
% biber as required.
%
\begingroup
\makeatletter
\@ifundefined{ver@biblatex.sty}
  {\@latex@error
     {Missing 'biblatex' package}
     {The bibliography requires the 'biblatex' package.}
      \aftergroup\endinput}
  {}
\endgroup


\refsection{0}
  \datalist[entry]{ynt/global//global/global/global}
    \entry{UML_Reference_Manual}{book}{}{}
      \name{author}{3}{}{%
        {{hash=b8ace965f1ffa84dd4512f7e64c62d75}{%
           family={Rumbaugh},
           familyi={R\bibinitperiod},
           given={James},
           giveni={J\bibinitperiod}}}%
        {{hash=3e8f03cc324f52193ab00c1fab4df61a}{%
           family={Jacobson},
           familyi={J\bibinitperiod},
           given={Ivar},
           giveni={I\bibinitperiod}}}%
        {{hash=e4f07715269e006a4d4a4efa3ce3f996}{%
           family={Booch},
           familyi={B\bibinitperiod},
           given={Grady},
           giveni={G\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {GBR}%
      }
      \list{publisher}{1}{%
        {Addison-Wesley Longman Ltd.}%
      }
      \strng{namehash}{6385cf8d48142625a33e857e6f69df87}
      \strng{fullhash}{6385cf8d48142625a33e857e6f69df87}
      \strng{fullhashraw}{6385cf8d48142625a33e857e6f69df87}
      \strng{bibnamehash}{6385cf8d48142625a33e857e6f69df87}
      \strng{authorbibnamehash}{6385cf8d48142625a33e857e6f69df87}
      \strng{authornamehash}{6385cf8d48142625a33e857e6f69df87}
      \strng{authorfullhash}{6385cf8d48142625a33e857e6f69df87}
      \strng{authorfullhashraw}{6385cf8d48142625a33e857e6f69df87}
      \field{sortinit}{1}
      \field{sortinithash}{4f6aaa89bab872aa0999fec09ff8e98a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{isbn}{020130998X}
      \field{title}{The Unified Modeling Language reference manual}
      \field{year}{1998}
      \verb{doi}
      \verb 10.5555/294049
      \endverb
      \verb{urlraw}
      \verb https://dl.acm.org/doi/book/10.5555/294049
      \endverb
      \verb{url}
      \verb https://dl.acm.org/doi/book/10.5555/294049
      \endverb
    \endentry
    \entry{USE}{article}{}{}
      \name{author}{3}{}{%
        {{hash=efee28c1804bcc4a8a6d23461cb0dcc1}{%
           family={Gogolla},
           familyi={G\bibinitperiod},
           given={Martin},
           giveni={M\bibinitperiod}}}%
        {{hash=0734b8612ed54ba8e3a062d49aac875d}{%
           family={Büttner},
           familyi={B\bibinitperiod},
           given={Fabian},
           giveni={F\bibinitperiod}}}%
        {{hash=d4951d9371b4c7e1d3218815de6e26a2}{%
           family={Richters},
           familyi={R\bibinitperiod},
           given={Mark},
           giveni={M\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {USA}%
      }
      \list{publisher}{1}{%
        {Elsevier North-Holland, Inc.}%
      }
      \strng{namehash}{3cfa4d6a80f6fddf63f05f5cec1355db}
      \strng{fullhash}{3cfa4d6a80f6fddf63f05f5cec1355db}
      \strng{fullhashraw}{3cfa4d6a80f6fddf63f05f5cec1355db}
      \strng{bibnamehash}{3cfa4d6a80f6fddf63f05f5cec1355db}
      \strng{authorbibnamehash}{3cfa4d6a80f6fddf63f05f5cec1355db}
      \strng{authornamehash}{3cfa4d6a80f6fddf63f05f5cec1355db}
      \strng{authorfullhash}{3cfa4d6a80f6fddf63f05f5cec1355db}
      \strng{authorfullhashraw}{3cfa4d6a80f6fddf63f05f5cec1355db}
      \field{sortinit}{2}
      \field{sortinithash}{8b555b3791beccb63322c22f3320aa9a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The Unified Modeling Language (UML) is accepted today as an important standard for developing software. UML tools however provide little support for validating and checking models in early development phases. There is also no substantial support for the Object Constraint Language (OCL). We present an approach for the validation of UML models and OCL constraints based on animation and certification. The USE tool (UML-based Specification Environment) supports analysts, designers and developers in executing UML models and checking OCL constraints and thus enables them to employ model-driven techniques for software production.}
      \field{issn}{0167-6423}
      \field{journaltitle}{Sci. Comput. Program.}
      \field{month}{12}
      \field{number}{1–3}
      \field{title}{USE: A UML-based specification environment for validating UML and OCL}
      \field{volume}{69}
      \field{year}{2007}
      \field{pages}{27\bibrangedash 34}
      \range{pages}{8}
      \verb{doi}
      \verb 10.1016/j.scico.2007.01.013
      \endverb
      \verb{urlraw}
      \verb https://doi.org/10.1016/j.scico.2007.01.013
      \endverb
      \verb{url}
      \verb https://doi.org/10.1016/j.scico.2007.01.013
      \endverb
      \keyw{Constraint,Invariant,Model,Model certification,Model execution,Model validation,OCL,Pre- and post-conditions,UML}
    \endentry
    \entry{Filmstripping}{inproceedings}{}{}
      \name{author}{3}{}{%
        {{hash=7c0f27b233effd66fe3132dc2d195282}{%
           family={Hilken},
           familyi={H\bibinitperiod},
           given={Frank},
           giveni={F\bibinitperiod}}}%
        {{hash=8565c1d4f1042f88753e2da935654c0d}{%
           family={Hamann},
           familyi={H\bibinitperiod},
           given={Lars},
           giveni={L\bibinitperiod}}}%
        {{hash=efee28c1804bcc4a8a6d23461cb0dcc1}{%
           family={Gogolla},
           familyi={G\bibinitperiod},
           given={Martin},
           giveni={M\bibinitperiod}}}%
      }
      \name{editor}{2}{}{%
        {{hash=4f89e18da939d2df2931b7fb2951afb5}{%
           family={Di\bibnamedelima Ruscio},
           familyi={D\bibinitperiod\bibinitdelim R\bibinitperiod},
           given={Davide},
           giveni={D\bibinitperiod}}}%
        {{hash=f54190ff266e02128b40dbab3fe1f605}{%
           family={Varró},
           familyi={V\bibinitperiod},
           given={Dániel},
           giveni={D\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {Cham}%
      }
      \list{publisher}{1}{%
        {Springer International Publishing}%
      }
      \strng{namehash}{b70560ea83e0b855644d3a83570fa78c}
      \strng{fullhash}{b70560ea83e0b855644d3a83570fa78c}
      \strng{fullhashraw}{b70560ea83e0b855644d3a83570fa78c}
      \strng{bibnamehash}{b70560ea83e0b855644d3a83570fa78c}
      \strng{authorbibnamehash}{b70560ea83e0b855644d3a83570fa78c}
      \strng{authornamehash}{b70560ea83e0b855644d3a83570fa78c}
      \strng{authorfullhash}{b70560ea83e0b855644d3a83570fa78c}
      \strng{authorfullhashraw}{b70560ea83e0b855644d3a83570fa78c}
      \strng{editorbibnamehash}{562520ebd044e52b7930109e3f8505c8}
      \strng{editornamehash}{562520ebd044e52b7930109e3f8505c8}
      \strng{editorfullhash}{562520ebd044e52b7930109e3f8505c8}
      \strng{editorfullhashraw}{562520ebd044e52b7930109e3f8505c8}
      \field{sortinit}{2}
      \field{sortinithash}{8b555b3791beccb63322c22f3320aa9a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This contribution presents an automatic transformation from UML and OCL models into enriched UML and OCL models, so-called filmstrip models, which embody temporal information when employing OCL while maintaining the same functionality as the original model. The approach uses a combination of object and sequence diagrams that allows for a wide range of possible OCL constraints about sequences of operation calls and their temporal properties. The modeler does not need to account for such properties while creating the original model. Errors found by constraints for the filmstrip model can easily be related back to the original model, as the elements of the filmstrip model are synchronized with the original model and the backwards calculation is generally simple. The approach is implemented in a UML and OCL modeling tool.}
      \field{booktitle}{Theory and Practice of Model Transformations}
      \field{isbn}{978-3-319-08789-4}
      \field{title}{Transformation of UML and OCL Models into Filmstrip Models}
      \field{year}{2014}
      \field{pages}{170\bibrangedash 185}
      \range{pages}{16}
    \endentry
    \entry{TemporalAndEventOCL}{article}{}{}
      \name{author}{2}{}{%
        {{hash=1b87cd8f0cbd100c9433a8f809a36c21}{%
           family={Kanso},
           familyi={K\bibinitperiod},
           given={Bilal},
           giveni={B\bibinitperiod}}}%
        {{hash=6f56568ef372d5485d61cc700dc28637}{%
           family={Taha},
           familyi={T\bibinitperiod},
           given={Safouan},
           giveni={S\bibinitperiod}}}%
      }
      \strng{namehash}{24c7c863856e394adc47593456b96bd6}
      \strng{fullhash}{24c7c863856e394adc47593456b96bd6}
      \strng{fullhashraw}{24c7c863856e394adc47593456b96bd6}
      \strng{bibnamehash}{24c7c863856e394adc47593456b96bd6}
      \strng{authorbibnamehash}{24c7c863856e394adc47593456b96bd6}
      \strng{authornamehash}{24c7c863856e394adc47593456b96bd6}
      \strng{authorfullhash}{24c7c863856e394adc47593456b96bd6}
      \strng{authorfullhashraw}{24c7c863856e394adc47593456b96bd6}
      \field{sortinit}{2}
      \field{sortinithash}{8b555b3791beccb63322c22f3320aa9a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The Object Constraint Language (OCL) is widely used to express static constraints on models and object-oriented systems. However, the notion of dynamic constraints, controlling the system behavior over time, has not been natively supported. Such dynamic constraints are necessary to handle temporal and real-time properties of systems. In this paper, we first add a temporal layer to the OCL language, based syntactically on Dwyer et al.'s specification patterns. We enrich it with formal scenario-based semantics and integrate it into the current Eclipse OCL plug-in. Second, we translate, with a compositional approach, OCL temporal properties into finite-state automata and we connect our framework to automatic test generators. This way, we create a bridge linking model driven engineering and usual formal methods.}
      \field{issn}{0167-6423}
      \field{journaltitle}{Science of Computer Programming}
      \field{note}{Selected Papers from the Fifth International Conference on Software Language Engineering (SLE 2012)}
      \field{title}{Specification of temporal properties with OCL}
      \field{volume}{96}
      \field{year}{2014}
      \field{pages}{527\bibrangedash 551}
      \range{pages}{25}
      \verb{doi}
      \verb https://doi.org/10.1016/j.scico.2014.02.029
      \endverb
      \verb{urlraw}
      \verb https://www.sciencedirect.com/science/article/pii/S0167642314000963
      \endverb
      \verb{url}
      \verb https://www.sciencedirect.com/science/article/pii/S0167642314000963
      \endverb
      \keyw{OCL,Temporal patterns,Eclipse/MDT,Model-driven engineering,Formal methods}
    \endentry
    \entry{UML}{manual}{}{}
      \list{publisher}{1}{%
        {Object Management Group}%
      }
      \field{sortinit}{2}
      \field{sortinithash}{8b555b3791beccb63322c22f3320aa9a}
      \field{labeltitlesource}{title}
      \field{title}{Unified modeling language specification version 2.5.1}
      \field{year}{2017}
      \verb{urlraw}
      \verb https://www.omg.org/spec/UML/2.5.1
      \endverb
      \verb{url}
      \verb https://www.omg.org/spec/UML/2.5.1
      \endverb
    \endentry
    \entry{TOCL}{inproceedings}{}{}
      \name{author}{5}{}{%
        {{hash=b886be6d961c9c7d500ed76bc5c2a5fd}{%
           family={Lail},
           familyi={L\bibinitperiod},
           given={Mustafa\bibnamedelima Al},
           giveni={M\bibinitperiod\bibinitdelim A\bibinitperiod}}}%
        {{hash=9f75bb10fbf1dc39d97fd389232f4568}{%
           family={Rosales},
           familyi={R\bibinitperiod},
           given={Antonio},
           giveni={A\bibinitperiod}}}%
        {{hash=730a7182d15c0fe2548d9523f023fc4b}{%
           family={Cardenas},
           familyi={C\bibinitperiod},
           given={Hector},
           giveni={H\bibinitperiod}}}%
        {{hash=8565c1d4f1042f88753e2da935654c0d}{%
           family={Hamann},
           familyi={H\bibinitperiod},
           given={Lars},
           giveni={L\bibinitperiod}}}%
        {{hash=b3bf172c5c6954c3a908fd512f16ff4f}{%
           family={Perez},
           familyi={P\bibinitperiod},
           given={Alfredo},
           giveni={A\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {Montreal, Quebec, Canada}%
      }
      \list{publisher}{1}{%
        {Association for Computing Machinery}%
      }
      \strng{namehash}{b55098733766b3ddb34ed942dcd48dcd}
      \strng{fullhash}{c5150dd12cdf17514ac52c99aabb2375}
      \strng{fullhashraw}{c5150dd12cdf17514ac52c99aabb2375}
      \strng{bibnamehash}{b55098733766b3ddb34ed942dcd48dcd}
      \strng{authorbibnamehash}{b55098733766b3ddb34ed942dcd48dcd}
      \strng{authornamehash}{b55098733766b3ddb34ed942dcd48dcd}
      \strng{authorfullhash}{c5150dd12cdf17514ac52c99aabb2375}
      \strng{authorfullhashraw}{c5150dd12cdf17514ac52c99aabb2375}
      \field{sortinit}{2}
      \field{sortinithash}{8b555b3791beccb63322c22f3320aa9a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Specifying and verifying the temporal properties of UML-based systems can be challenging. Although there exist some extensions of OCL to support the specification of temporal properties, most of the approaches depend on using non-UML formalisms such as LTL, CTL, and CTL*. The approaches also rely on transforming the under-development UML models into non-UML model checking frameworks for verification. These approaches introduce complexities and relies on techniques and tools that are not within the UML spectrum. In this paper, we show how TOCL (one OCL extension for temporal properties specification) can be transformed into OCL for verification purposes. Towards this end, we created a formal EBNF grammar for TOCL, based on which a parser and a MOF metamodel were generated. To facilitate the analysis of the TOCL properties, we formally defined transformation rules from the TOCL metamodel to the OCL metamodel using QVTo. We validated the implementations of the transformation rules using USE.}
      \field{booktitle}{Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings}
      \field{isbn}{9781450394673}
      \field{series}{MODELS '22}
      \field{title}{Transformation of TOCL temporal properties into OCL}
      \field{year}{2022}
      \field{pages}{899\bibrangedash 907}
      \range{pages}{9}
      \verb{doi}
      \verb 10.1145/3550356.3563132
      \endverb
      \verb{urlraw}
      \verb https://doi.org/10.1145/3550356.3563132
      \endverb
      \verb{url}
      \verb https://doi.org/10.1145/3550356.3563132
      \endverb
      \keyw{transformation,temporal propeties,UML,TOCL,OCL}
    \endentry
  \enddatalist
\endrefsection
\endinput

